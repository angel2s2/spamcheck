#!/bin/sh
# 
# 
SCRIPT_NAME='spam-check'
VERSION='0.3.2'
DESCRIPTION='SpamCheck - скрипт для проверки IP-адресов по спам базам'
LICENSE="GPLv3"
AUTHOR="(C) 2010 Roman (Angel2S2) Shagrov"
EMAIL="angel2s2ru@gmail.com"
BLOG="http://angel2s2.blogspot.com/"
# 
# Обо всех ошибках, замечаниях и предложениях пишите на angel2s2ru@gmail.com 
# или оставляйте комментарии в моем блоге http://angel2s2.blogspot.com/
# 
# Благодарности:
# slash (http://linsovet.com/user/113)
# Tenno Seremel (http://serenareem.net/)
# ramok (http://linsovet.com/users/ramok)
# darkk (http://darkk.net.ru/)
# _gaSh_ (http://linsovet.com/users/gash)
# Silver Ghost (http://silverghost.org.ua) 
# 
# История изменений ( - - удалено; + - добавлено; = - изменено):
# Версия 0.3.1:
# + Пофиксен баг, из-за которого не верно обрабатывались некоторые ответы от DNSBL
# 
# Версия 0.3.0:
# = Скрипт снова перписан с нуля
# = Теперь работает через интерпритатор sh, а не bash, как в пред. версиях
# = Узменены ключи запуска
# = Работать с "вшитым" списком по умолчанию, если не задано иное
# + "Вшитый" список DNSBL и ключ -l
# + Проверка, чтобы опции не пересекались, т.е. не допустить одновременного использования двух и более взаимоисключаемых опций
# + Выводить ошибки в поток ошибок
# - Временный файл больше не нужен
# - Убран цветной вывод результатов работы
# 
# Версия 0.2.1:
# + Защита запуска из под root'а
# + Ключ -u для запуска из под root'а
# = Временный файл теперь генерится с помощью mktemp
# 
# Версия 0.2.0:
# = Полноситью переписал скрипт, теперь он работает напрямую через dnsbl
# 
# Версия 0.1.0:
# Первая публичная версия, работала по http.
# 


SED='/bin/sed'
WGET='/usr/bin/wget'
HOST='/usr/bin/host'


# "Вшитый" список DNSBL для проверки
DNSBL_LIST='abuse.rfc-ignorant.org access.redhawk.org aspews.ext.sorbs.net b.barracudacentral.org blackholes.brainerd.net blackholes.five-ten-sg.com blackholes.wirehub.net blacklist.junkemailfilter.com blacklist.sci.kun.nl blacklist.woody.ch bl.deadbeef.com bl.emailbasura.org block.dnsbl.sorbs.net bl.redhatgate.com bl.spamcannibal.org bl.spamcop.net bl.technovision.dk c10.rbl.hk cbl.abuseat.org cbl.anti-spam.org.cn cblless.anti-spam.org.cn cblplus.anti-spam.org.cn combined.njabl.org db.wpbl.info dialups.mail-abuse.org dialups.visi.com dnsbl-0.uceprotect.net dnsbl-1.uceprotect.net dnsbl-2.uceprotect.net dnsbl-3.uceprotect.net dnsbl.ahbl.org dnsbl.cyberlogic.net dnsbl.jammconsulting.com dnsbl.kempt.net dnsbl.njabl.org dnsbl.sorbs.net duinv.aupads.org dul.dnsbl.sorbs.net dul.ru fl.chickenboner.biz hil.habeas.com hostkarma.junkemailfilter.com http.dnsbl.sorbs.net http.opm.blitzed.org images.rbl.msrbl.net ips.backscatterer.org ircbl.ahbl.org ix.dnsbl.manitu.net korea.services.net l2.bbfh.ext.sorbs.net list.dnswl.org mail-abuse.blacklist.jippg.org map.spam-rbl.com misc.dnsbl.sorbs.net msgid.bl.gweep.ca multi.surbl.org multi.uribl.com no-more-funn.moensted.dk ohps.dnsbl.net.au omrs.dnsbl.net.au orid.dnsbl.net.au orvedb.aupads.org osps.dnsbl.net.au osrs.dnsbl.net.au owfs.dnsbl.net.au owps.dnsbl.net.au pbl.spamhaus.org phishing.rbl.msrbl.net probes.dnsbl.net.au proxy.bl.gweep.ca psbl.surriel.com query.bondedsender.org rbl.cluecentral.net rbl-plus.mail-abuse.org rbl.snark.net rdts.dnsbl.net.au relays.bl.gweep.ca relays.bl.kundenserver.de relays.mail-abuse.org relays.nether.net ricn.dnsbl.net.au rmst.dnsbl.net.au rot.blackhole.cantv.net rsbl.aupads.org satos.rbl.cluecentral.net sbl.csma.biz sbl.spamhaus.org sbl-xbl.spamhaus.org smtp.dnsbl.sorbs.net socks.dnsbl.sorbs.net socks.opm.blitzed.org sorbs.dnsbl.net.au spam.dnsbl.sorbs.net spamguard.leadmon.net spam.olsentech.net spamrbl.imp.ch spamsites.dnsbl.net.au spamsources.dnsbl.info spamsources.fabel.dk spam.wytnij.to t1.bl.dnsbl.net.au t1.dnsbl.net.au ubl.unsubscore.com ucepn.dnsbl.net.au virbl.bit.nl virbl.dnsbl.bit.nl virus.rbl.jp virus.rbl.msrbl.net web.dnsbl.sorbs.net whois.rfc-ignorant.org wingate.opm.blitzed.org wormrbl.imp.ch wpbl.dnsbl.net.au xbl.spamhaus.org zen.spamhaus.org zombie.dnsbl.sorbs.net'

# Параметры по умолчанию
IS_QUIET=0					# -q	- Ничего не выводить
IS_DNSBL_PRINT=0			# -l	- Вывести список dnsbl-серверов
IS_ONE_DNSBL=0				# -d	- Указатель, что надо проверить по указанному DNSBL
IS_FILE=0					# -f	- Указатель, что используется файл
IS_INET=0					# -i	- Сграбить список DNSBL с сайта http://myiptest.com/
DNS_SERVER='208.67.222.222'	# -s	- DNS Server (OpenDNS.com), через который будет проверяться IP по DNSBL
IP_LIST=''					#		- Тут будут все IP'шники 
IS_TIME_OUT_ERROR=0			# -t	- Считать тайм ауты подключения к DNSBL ошибками и выводить в поток ошибок?

_version() {
	echo "$SCRIPT_NAME, version $VERSION"
	echo "Copyright $AUTHOR"
	echo "License $LICENSE"
	echo "Contacts: $EMAIL | $BLOG"
}

_usage() {
	echo "$SCRIPT_NAME [-q] [-l] [-d dnsbl | -f filename | -i] [-s dns_server] [-t] [-w] [--] [ip or domain-name ...]"
}

_help() {
	_usage
	echo ""
	echo "   -q		- Ничего не выводить"
	echo "   -l		- Показать список DNSBL-серверов"
	echo "   -d		- Проверить по указанному DNSBL"
	echo "   -f		- Взять список DNSBL-серверов из файла (по одному на строчку)"
	echo "   -i		- Сграбить список DNSBL с сайта http://myiptest.com/"
	echo "   -s		- Указать DNS-сервер, через который будет идти проверка (по умолчанию OpenDNS - 208.67.222.222)"
	echo "   -t		- Считать Time Out'ы ошибкой"
	echo "   --		- Считается, что дальше идут только ip и/или доманные имена"
	echo "   [ip or domain-name ...]	- ip и/или доменный имена, которые нужно проверить"
	echo "   --version, --help, --usage	- без комментариев"
}

_bad_param() {
	echo "Не известный параметр: $1" 1>&2
}

_check_and_build_ip_list() {
	CBL=$(echo "$1" | $SED -n '/[^0-9\.]\+/p')
	# если пусто, значит считаем что у нас "IP"
	if [ -z "$CBL" ] ; then 
		IP_LIST="$IP_LIST $1"
	# иначе "доменное имя"
	else
		IP_LIST="$IP_LIST $($HOST $1 | $SED -n '/address/s/^.\+\ \([0-9\.]\+\).*$/\1/gp')"
	fi
}

# Парсим параметры запуска
if [ $# -eq 0 ] ; then _help ; exit 1 ; fi
while [ $# -gt 0 ]; do
	case "$1" in
		"-q"	) IS_QUIET=1 ; shift ;;
		"-t"	) IS_TIME_OUT_ERROR=1 ; shift ;;
		"-f"	) IS_FILE=1 ; if [ -r "$2" ] ; then DNSBL_LIST=$($SED '/^$/d' $2) ; shift 2 ; else echo "Файл $2 либо не существует, либо нет прав на чтение!" 1>&2 ; exit 1 ; fi ;;
		"-i"	) IS_INET=1 ; DNSBL_LIST=$($WGET -q -O - 'http://www.myiptest.com/staticpages/index.php/check-Blacklisted-IP-DNSBL/'$DNS_SERVER | $SED -n '/href=.\+dnsbl=/s/^.\+dnsbl=\([a-zA-Z0-9\.\-]\+\).*$/\1/gp') ; shift ;;
		"-d"	) IS_ONE_DNSBL=1 ; DNSBL_LIST=$2 ; shift 2 ;;
		"-l"	) IS_DNSBL_PRINT=1 ; shift ;;
		"-s"	) DNS_SERVER=$2 ; shift 2 ;;
		"--"	) shift ; while [ $# -gt 0 ] ; do _check_and_build_ip_list $1 ; shift ; done ; break ;;
		"--version"	) _version ; exit 255 ;;
		"--help"	) _help ; exit 255 ;;
		"--usage"	) _usage ; exit 255 ;;
		-*		) _bad_param $1 ; exit 1 ;;
		*		) _check_and_build_ip_list $1 ; shift ;;
	esac
done

# Список DNSBL-серверов заполнен?
if [ -z "$DNSBL_LIST" -a $IS_INET -eq 1 ] ; then echo 'Список DNSBL-серверов пуст! Видать не удалось подкючиться к северу.' 1>&2 ; fi
if [ -z "$DNSBL_LIST" -a $IS_FILE -eq 1 ] ; then echo 'Список DNSBL-серверов пуст! Видать файл пустой.' 1>&2 ; fi
if [ -z "$DNSBL_LIST" ] ; then echo 'Список DNSBL-серверов пуст! Ты случаем в скрипте переменную $DNSBL_LIST не удалил?' 1>&2 ; fi


_bad_params_combine() {
	echo "Не совместимые параметры!" 1>&2
	exit 1
}

# Проверка на (не)совместимость параметров
if [ $IS_DNSBL_PRINT -gt 0 -a $IS_QUIET -gt 0 ] ; then _bad_params_combine ; fi
if [ $IS_FILE -gt 0 -a $IS_INET -gt 0 ] ; then _bad_params_combine ; fi
if [ $IS_FILE -gt 0 -a $IS_ONE_DNSBL -gt 0 ] ; then _bad_params_combine ; fi
if [ $IS_ONE_DNSBL -gt 0 -a $IS_INET -gt 0 ] ; then _bad_params_combine ; fi

# Вывод списка DNSBL серверов, если на то был "запрос"
if [ $IS_DNSBL_PRINT -gt 0 ] ; then echo "$DNSBL_LIST" | $SED 's/\ /\n/g' | $SED '/^$/d' ; exit 0 ; fi

# "Перевернутый" IP
_reverse_ip() {
	echo $1 | $SED -e 's/$/\n/;:z;s/\([0-9]\{1,3\}\)\([^\n]*\n\)/\2\1./;tz;s/.*\n//;s/.$//'
}

# Принимает в $1 - строку на вывод, а в $2 - куда выводить (stduot (1)  или stderr (2))
_output() {
	# Если обычный режим, то выводим инфу на консоль, иначе просто все игнорируем
	if [ $IS_QUIET -eq 0 ] ; then
		if [ $2 -eq 2 ] ; then
			echo "$1" 1>&2
		else
			echo "$1"
		fi
	fi
}

# Получаем ответ от DNSBL сервера, парсим его и выводим соответствующую информацию
_get_and_parse_dnsbl_return() {
	# Преобразуем пробел в перевод строки, чтобы было легче парсить, и удаляем пустые строки, если таковые появятся
	echo "$DNSBL_LIST" | $SED 's/\ /\n/g' | $SED '/^$/d' | (
		while read DNSBL ; do
		GPD=$($HOST -t A $1.$DNSBL $DNS_SERVER)
		RES_A=$(echo "$GPD" | $SED -n '/NXDOMAIN/p')
		# Нас нет в DNSBL :)
		if [ -n "$RES_A" ] ; then
			_output "[ OK ]         - $DNSBL		- not found" 1
		else
			RES_A=$(echo "$GPD" | $SED -n '/\ has\ address\ /s/^.*address\ \([0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\).*$/\1/p')
			# Черт... У нас проблемы :(
			if [ -n "$RES_A" ] ; then
				# Узнаем подробности
				RES_TXT=$($HOST -t TXT $1.$DNSBL $DNS_SERVER | $SED -n '/text/s/^.*\"\(.\+\)\".*$/\1/p')
				_output "[ +++SPAM+++ ] - $DNSBL		- ($RES_A) $RES_TXT" 2
				RETURN_CODE=1
			else
				# Или может мы просто не можем достучаться до DNSBL-сервера?
				RES_A=$(echo "$GPD" | $SED -n '/connection timed out/p')
				if [ -n "$RES_A" ] ; then
					if [ $IS_TIME_OUT_ERROR -gt 0 ] ; then
						_output "[ ERROR ]      - $DNSBL		- connection time out" 2
					 	RETURN_CODE=1
					else
						_output "[ ERROR ]      - $DNSBL		- connection time out" 1
					fi
				else
					_output 'Странно... Ты не должен был этого видеть... о_О Напиши мне багрепорт, плиз, укажи версии sh, sed, host и самого скрипта, а так же какая у тебя ось и какие параметры были переданы скрипту. Заранее спасибо. Мое мыло: angel2s2ru@gmail.com' 2
					RETURN_CODE=1
				fi
			fi
		fi
		done
		# Т.к. цикл это отдельный подшелл, то выход из функции приходится запихивать в этот же подшелл
		return $RETURN_CODE
	)
}

# IP указан?
if [ -z "$IP_LIST" ] ; then echo "Не указаны адреса для проверки!" 1>&2 ; exit 1 ; fi

# Преобразуем пробел в перевод строки, чтобы было легче парсить, и удаляем пустые строки, если таковые появятся
echo "$IP_LIST" | $SED 's/\ /\n/g' | $SED '/^$/d' | (
	while read IP ; do
		# Получаем "перевернутый" IP
		R_IP=$(_reverse_ip $IP)
		_output "------------------------------------------$IP------------" 1
				# Проверяем наши IP по спам-базам и выводим результат на консоль
				_get_and_parse_dnsbl_return $R_IP
				EXIT_CODE=$?
	done
	# Т.к. цикл это отдельный подшелл, то выход из скрипта приходится запихивать в этот же подшелл
	exit $EXIT_CODE
)

